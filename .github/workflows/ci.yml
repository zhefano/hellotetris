name: iOS CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
        
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show Swift version
      run: swift --version
      
    - name: Build project
      run: |
        xcodebuild clean build \
          -project hellotetris.xcodeproj \
          -scheme hellotetris \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts
        path: build/
        retention-days: 7

  test:
    name: Run Tests
    runs-on: macos-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
        
    - name: Run unit tests
      run: |
        xcodebuild test \
          -project hellotetris.xcodeproj \
          -scheme hellotetris \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: build/Logs/Test/
        retention-days: 30

  lint:
    name: SwiftLint
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SwiftLint
      run: |
        brew install swiftlint
        
    - name: Run SwiftLint
      run: |
        swiftlint lint --reporter github-actions-logging
        
    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: swiftlint-report.json
        retention-days: 7

  security:
    name: Security Scan
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      run: |
        echo "üîç Running security checks..."
        
        # Check for actual hardcoded secrets (more specific patterns)
        echo "Checking for hardcoded secrets..."
        if grep -r -i "password.*=.*['\"][^'\"]*['\"]\|secret.*=.*['\"][^'\"]*['\"]\|token.*=.*['\"][^'\"]*['\"]\|api_key.*=.*['\"][^'\"]*['\"]" . --exclude-dir=.git --exclude-dir=build --exclude=*.md --exclude=*.storyboard --exclude=*.plist --exclude=*.sks --exclude=*.xcscheme; then
          echo "‚ö†Ô∏è  Potential hardcoded secrets found"
          exit 1
        fi
        
        # Check for debug/development code in production
        echo "Checking for debug code..."
        if grep -r -i "debug.*=.*true\|development.*=.*true\|test.*=.*true" . --exclude-dir=.git --exclude-dir=build --exclude=*.md --exclude=*.storyboard --exclude=*.plist --exclude=*.sks --exclude=*.xcscheme; then
          echo "‚ö†Ô∏è  Debug/development flags found"
          exit 1
        fi
        
        # Check for proper code signing setup
        echo "Checking code signing configuration..."
        if grep -r "CODE_SIGN_IDENTITY.*=.*\"\"" . --exclude-dir=.git --exclude-dir=build --exclude=*.md; then
          echo "‚ÑπÔ∏è  Code signing disabled (expected for CI)"
        fi
        
        echo "‚úÖ Security scan completed successfully"
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: security-report.txt
        retention-days: 30

  archive:
    name: Create Archive
    runs-on: macos-latest
    needs: [build, test, lint, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
        
    - name: Create archive
      run: |
        xcodebuild archive \
          -project hellotetris.xcodeproj \
          -scheme hellotetris \
          -archivePath build/hellotetris.xcarchive \
          -derivedDataPath build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Upload archive
      uses: actions/upload-artifact@v4
      with:
        name: app-archive
        path: build/hellotetris.xcarchive
        retention-days: 90 